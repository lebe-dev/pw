global:
  imagePullSecrets: []

# PW application configuration
pw:
  image:
    repository: tinyops/pw
    tag: "1.9.2"
    pullPolicy: IfNotPresent

  replicaCount: 1

  config:
    listen: "0.0.0.0:8080"
    logTarget: "console"
    logLevel: "info"
    messageMaxLength: "4096"
    fileUploadEnabled: "true"
    fileMaxSize: "1048576"
    
    # IP whitelist configuration
    ipLimits:
      enabled: false
      whitelist: []
      # Example configuration:
      # enabled: true
      # whitelist:
      #   - ip: "192.168.1.100"
      #     messageMaxLength: 8192
      #     fileMaxSize: 104857600
      #   - ip: "10.0.0.0/8"
      #     messageMaxLength: 4096
      #   - ip: "172.16.1.5"
      #     fileMaxSize: 209715200

  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080

  resources:
    limits:
      cpu: 500m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}

# Redis configuration
redis:
  image:
    repository: redis
    tag: "8.0.3-alpine3.21"
    pullPolicy: IfNotPresent

  replicaCount: 1

  # Redis authentication
  auth:
    enabled: true
    # If not provided, a random password will be generated
    password: ""

  config:
    maxMemory: "128mb"
    save: ""
    appendOnly: "no"

  service:
    type: ClusterIP
    port: 6379
    targetPort: 6379

  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 50m
      memory: 128Mi

  nodeSelector: {}
  tolerations: []
  affinity: {}

# Service Account
serviceAccount:
  create: true
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Client-IP $remote_addr;
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: pw.company.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: pw-tls
  #    hosts:
  #      - pw.company.com

podSecurityContext:
  fsGroup: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000

podAnnotations: {}

labels: {}

# Additional environment variables
extraEnvVars: []
# - name: CUSTOM_VAR
#   value: "custom_value"

# Extra volumes and volume mounts
extraVolumes: []
extraVolumeMounts: []
