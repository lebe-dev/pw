stages:
  - build

build-image:
  stage: build

  when: manual

  image: docker:28.3.3
  services:
    - docker:28.3.3-dind-alpine3.22
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - APP_VERSION=`cat Cargo.toml | grep "version = " | head -1 | cut -d "=" -f2 | tr -d '"' | tr -d ' '`
    - DOCKER_IMAGE=$CI_REGISTRY_IMAGE:$APP_VERSION
    - DOCKER_BUILDKIT=1
    - docker build --progress=plain -t $DOCKER_IMAGE -f Dockerfile .
    - docker push $DOCKER_IMAGE

  tags:
    - linux

publish-image:
  stage: build

  needs: [build-image]

  image: docker:28.3.3
  services:
    - docker:28.3.3-dind-alpine3.22
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - APP_VERSION=`cat Cargo.toml | grep "version = " | head -1 | cut -d "=" -f2 | tr -d '"' | tr -d ' '`
    - DOCKER_IMAGE=$CI_REGISTRY_IMAGE:$APP_VERSION
    - docker pull $DOCKER_IMAGE
    - docker tag $DOCKER_IMAGE tinyops/pw:$APP_VERSION
    - docker push tinyops/pw:$APP_VERSION
    - docker rmi $DOCKER_IMAGE || true

  tags:
    - tinybull
