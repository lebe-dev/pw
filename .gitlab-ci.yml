stages:
  - webui
  - app
  - image

build-webui:
  stage: webui

  script:
    - cd webui
    - cargo test
    - dx build --release

  artifacts:
    name: webui
    paths:
      - webui/dist
    expire_in: 1 week

  tags:
    - rockylinux8

build-linux:
  stage: app

  script:
    - 'cd backend'
    - 'mkdir static'
    - 'cargo test'
    - 'cp -r ../webui/dist/ static/'
    - 'cargo test'
    - 'cargo build --release'
    - 'cd ..'
    - 'cp backend/pw.yml-dist .'
    - 'cp -r backend/locale.d .'
    - 'cp target/release/backend pw'
    - 'eu-elfcompress pw'
    - 'strip pw'
    - 'upx -9 --lzma pw || true'
    - 'VERSION=$(cat backend/Cargo.toml | grep version | head -1 | cut -d "\"" -f 2)'
    - 'echo $VERSION > build-version'

  artifacts:
    name: pw-app
    paths:
      - build-version
      - pw
      - README.md
      - pw.yml-dist
      - docs
      - locale.d
    expire_in: 1 week

#build-windows:
#  stage: app
#
#  script:
#    - cd backend
#    - mkdir static
#    - 'xcopy ..\webui\dist\ static\ /E /H'
#    - cargo test
#    - cargo build --release
#    - cd ..
#    - copy target\release\backend.exe pw.exe
#    - copy backend\pw.yml-dist pw.yml-dist
#    - 'xcopy backend\locale.d locale.d\ /E /H'
#
#  artifacts:
#    name: app-windows
#    paths:
#      - pw.exe
#      - pw.yml-dist
#      - README.md
#      - docs
#      - locale.d
#    expire_in: 1 week
#
#  tags:
#    - windows

build-image:
  stage: image

  script:
    - 'VERSION=$(cat backend/Cargo.toml | grep "version" | head -1 | cut -d "\"" -f2)'
    - 'docker build --progress=plain -t tinyops/pw:${VERSION} -f Dockerfile .'
    - 'docker push tinyops/pw:${VERSION}'

  tags:
    - rockylinux8